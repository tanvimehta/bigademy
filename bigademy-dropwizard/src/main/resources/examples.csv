exercise_id,example_id,example_name,example1,1,Load data from a file,"Given a file example.txt:<div class=""grey-highlight"">1;2;3<br/>4;5;6<br/></div><div class=""green-highlight""><span class=""alias-settings"">A</span> = <span class=""keyword-highlighting"">LOAD</span> 'example.txt' <span class=""keyword-highlighting""> USING</span>  <span class=""keyword-highlighting"">PigStorage</span>(';');</div>The command above loads the data from the file example.txt and assigns it to <span class=""alias-settings"">alias A</span>. The data is stored in the default format as shown below.<br/><div class=""grey-highlight""><span class=""keyword-highlighting"">DUMP</span> <span class=""alias-settings"">A</span>;<br/>(1,2,3)<br/>(4,5,6)<br/></div><span class=""alert-settings"">NOTE:</span> <span class=""keyword-highlighting"">DUMP</span> is a debugging tool which allows us to see the contents stored in the alias (in this case <span class=""alias-settings"">A</span>). <br /><br/><span class=""keyword-highlighting"">PigStorage</span> is a default loader that can read files (in this case 'example.txt') containing character-delimited (in this case ';') tuple records. "1,2,Load data with specified schema,"<div class=""example-header-setting"">Example 2: LOAD data with a specified schema </div><span class=""alias-settings"">B</span> = <span class=""keyword-highlighting"">LOAD</span> 'example.txt' <span class=""keyword-highlighting"">AS</span> (a1:int, a2:int, a3:int);<br/><span class=""keyword-highlighting"">DESCRIBE</span> <span class=""alias-settings"">B</span>;<br/>b: {a1:int, a2:int, a3:int} <br/><span class=""alert-settings"">NOTICE:</span> <span class=""keyword-highlighting"">DESCRIBE</span> is a debugging tool which allows us to view the schema.The loader loads data as bytearray datatype by default if a schema (in this case a1:int,a2:int, a3:int) is not specified.<br/><br/>In the examples above, we came across 2 relations referred to by their aliases (<span class=""alias-settings"">A</span> and <span class=""alias-settings"">B</span>). Relations in Pig Latin are called bags. A bag is a collection of tuples [(1,2,3) and (4,5,6) in example1]. A tuple is an ordered set of fields [a1, a2, a3 in example2].<br/><br/>"1,3,Store Operator,"<div class=""example-header-setting"">Example 3: <span class=""keyword-highlighting"">STORE</span> operator </div>Given <span class=""alias-settings"">A</span>:<br/> (1,2,3)<br/>(4,5,6)<br/><span class=""keyword-highlighting"">STORE</span> <span class=""alias-settings"">A</span> <span class=""keyword-highlighting"">INTO</span> 'output' <span class=""keyword-highlighting"">USING</span> <span class=""keyword-highlighting"">PigStorage</span>('#');<br/><span class=""keyword-highlighting"">CAT</span> output; (Displaying the contents of the file)<br/>1#2#3<br/>4#5#6<br/>"2,4,Projection,"<div class=""example-header-setting"">Example 1: Projection</div>Given <span class=""alias-settings"">A</span>: {a1, a2, a3}<br/>(1,2,3)<br/>(4,5,6)<br/><span class=""alias-settings"">B</span> = <span class=""keyword-highlighting"">FOREACH</span> <span class=""alias-settings"">A</span> <span class=""keyword-highlighting"">GENERATE</span> a1, a2;<br/><span class=""keyword-highlighting"">DUMP</span> <span class=""alias-settings"">B</span>;<br/>(1,2)<br/>(4,5)<br/><br/>"2,5,Define schema and use operator,"<div class=""example-header-setting"">Example 2: Define schema and use operators</div><span class=""alias-settings"">C</span> = <span class=""keyword-highlighting"">FOREACH</span> <span class=""alias-settings"">A</span> <span class=""keyword-highlighting"">GENERATE</span> a1+a2 <span class=""keyword-highlighting"">AS</span> sum:int;<br/><span class=""keyword-highlighting"">DUMP</span> <span class=""alias-settings"">C</span>;<br/>(3)<br/>(9)<br/>"3,6,Filter rows using single comparison operator,"<div class=""example-header-setting"">Example 1: FILTER rows using single comparison operator</div>Given <span class=""alias-settings"">A</span>: {a1, a2, a3}<br/>(1,2,3)<br/>(4,7,0)<br/>(7,8,9)<br/><span class=""alias-settings"">B</span> = <span class=""keyword-highlighting"">FILTER</span> <span class=""alias-settings"">A</span> <span class=""keyword-highlighting"">BY</span> (a1 > 2)<br/><span class=""keyword-highlighting"">DUMP</span> <span class=""alias-settings"">B</span>;<br/>(4,7,0)<br/>(7,8,9)<br/><br/>"3,7,Filter rows using multiple comparison operators,"<div class=""example-header-setting"">Example 2: FILTER rows using multiple comparison operators</div>Given <span class=""alias-settings"">A</span>: {a1, a2, a3}<br/>(1,2,3)<br/>(4,7,0)<br/>(,5,9)<br/><span class=""alias-settings"">B</span> = <span class=""keyword-highlighting"">FILTER</span><br/><span class=""alias-settings"">A</span> <span class=""keyword-highlighting"">BY</span> (a1 + a3 == 4) <span class=""keyword-highlighting"">AND</span> (<span class=""keyword-highlighting"">NOT</span>( a3 > a1)) <span class=""keyword-highlighting"">OR</span> (a1 IS null);<br/><span class=""keyword-highlighting"">DUMP</span> <span class=""alias-settings"">B</span>;<br/>(4,7,0)<br/>(,5,9)<br/>"4,8,Dereference - Tuple,"<div class=""example-header-setting"">Example 1: Dereference - Tuple</div> <span class=""alias-settings"">A</span> = <span class=""keyword-highlighting"">LOAD</span> 'data'  <span class=""keyword-highlighting"">USING PigStorage</span>(';') <span class=""keyword-highlighting"">AS</span> (f1:int, f2:tuple(t1:int,t2:int,t3:int));<br/><span class=""keyword-highlighting"">DUMP</span> <span class=""alias-settings"">A</span>;<br/>(1,(1,2,3))<br/>(2,(4,5,6))<br/>(3,(7,8,9))<br/>(4,(1,4,7))<br/>(5,(2,5,8))<br/><br/><span class=""alias-settings"">X</span> = <span class=""keyword-highlighting"">FOREACH</span> <span class=""alias-settings"">A</span> <span class=""keyword-highlighting"">GENERATE</span> f2.t1,f2.t3;<br/><span class=""keyword-highlighting"">DUMP</span> <span class=""alias-settings"">X</span>;<br/>(1,3)<br/>(4,6)<br/>(7,9)<br/>(1,7)<br/>(2,8)<br/>"5,9,Dereference - Bag,"<div class=""example-header-setting"">Example 1: Dereference - Bag</div>Given a relation containing the name of a director, movie directed by them and the movie's average rating in the form {director,movie,movieRating}. Find the average rating for each director. The output should be in the form {director,rating}<br/><span class=""alias-settings"">input</span> = <span class=""keyword-highlighting"">LOAD</span> 'data' <span class=""keyword-highlighting"">AS</span> (director:chararray, movie:chararray, movieRating:long};<br/><br/><span class=""keyword-highlighting"">DUMP</span> input;<br/>(Francis Lawrence, The Hunger Games- Catching Fire, 8.0)<br/>(Christopher Nolan, The Dark Knight Rises, 8.6)<br/>(Francis Lawrence, I am Legend, 7.2)<br/>(Christopher Nolan, Inception, 8.8)<br/>(Christopher Nolan, The Dark Knight, 9.0)<br/>(Pierre Coffin, Despicable Me, 7.7)<br/><br/><span class=""alias-settings"">directorData</span> = <span class=""keyword-highlighting"">GROUP</span> input <span class=""keyword-highlighting"">BY</span> director;<br/><br/><span class=""keyword-highlighting"">DUMP</span> <span class=""alias-settings"">directorData;</span><br/>(Francis Lawrence, {(Francis Lawrence, The Hunger Games- Catching Fire, 8.0), (Francis Lawrence, I am Legend, 7.2)})<br/>(Christopher Nolan, {(Christopher Nolan, The Dark Knight, 9.0), (Christopher Nolan, Inception, 8.8), (Christopher Nolan, The Dark Knight Rises, 8.6)})<br/>(Pierre Coffin, {(Pierre Coffin, Despicable Me, 7.7)})<br/><br/><span class=""alias-settings"">directorRating</span> = <span class=""keyword-highlighting"">FOREACH</span> <span class=""alias-settings"">directorData</span> <span class=""keyword-highlighting"">GENERATE</span> input.director, <span class=""keyword-highlighting"">AVG</span>(input.movieRating) <span class=""keyword-highlighting"">AS</span> rating;<br/><br/><span class=""keyword-highlighting"">DUMP</span> <span class=""alias-settings"">directorRating</span>;<br/>(Francis Lawrence, 7.6)<br/>(Christopher Nolan, 8.8)<br/>(Pierre Coffin, 7.7)<br/><br/><span class=""alert-settings"">NOTE</span>: <span class=""keyword-highlighting"">AVG</span> is an inbuilt function to calculate the average of a given field across all tuples.(in this case the average of input.movieRatings is caluclated across all movies by a particular director)"6,10,Dereference - Tuple/Bag,"<div class=""example-header-setting"">Example 1: Given a table ratings with ratings from critics for a movie as shown below:</div><span class=""keyword-highlighting"">DESCRIBE</span> <span class=""alias-settings"">ratings;</span><br/>{criticID: chararray, movie: chararray, rating: long}<br/><br/><span class=""keyword-highlighting"">DUMP</span> <span class=""alias-settings"">ratings</span>;<br/>(critic1, The Shawshank Redemption, 9.0)<br/>(critic3, The Dark Knight, 8.8)<br/>(critic3, The Shawshank Redemption, 9.5)<br/>(critic1, Schindler's List, 9.0)<br/>(critic1, The Dark Knight, 8.8)<br/>(critic2, The Shawshank Redemption, 9.0)<br/>(critic2, The Dark Knight, 8.8)<br/><br/>If we want to get a list of critics who have identical ratings for a movie:<br/><span class=""alias-settings"">sameRatings</span> = <span class=""keyword-highlighting"">GROUP</span> <span class=""alias-settings"">ratings</span> <span class=""keyword-highlighting"">BY</span> (movie,rating);<br/><span class=""keyword-highlighting"">DUMP</span> <span class=""alias-settings"">sameRatings</span>;<br/><br/>((The Shawshank Redemption, 9.0), {(critic1, The Shawshank Redemption, 9.0), (critic2, The Shawshank Redemption, 9.0)})<br/>((The Dark Knight, 8.8), {(critic3, The Dark Knight, 8.8), (critic1, The Dark Knight, 8.8), (critic2, The Dark Knight, 8.8)})<br/>((Schindler's List, 9.0), {(critic1, Schindler's List, 9.0)})<br/><br/><span class=""alert-settings"">NOTE</span>: We will be revisiting <span class=""alias-settings"">GROUP</span> operator in detail in a later chapter.<br/><br/>If we were to describe the schema of <span class=""alias-settings"">sameRatings</span> relation we would get:<br/>group:tuple({movie: chararray, rating: chararray})  ratings: bag({criticID: chararray, movie: chararray, rating: long})<br/><br/>Now, we will use dereferencing to access the movie name and critics.<br/><span class=""alias-settings"">movies</span> = <span class=""keyword-highlighting"">FOREACH</span> <span class=""alias-settings"">sameRatings</span> <span class=""keyword-highlighting"">GENERATE</span> group.movie, ratings.criticId;<br/><span class=""keyword-highlighting"">DUMP</span> <span class=""alias-settings"">movies</span>;<br/>(The Shawshank Redemption,{(critic1, critic2)})<br/>(The Shawshank Redemption,{(critic3)})<br/>(The Dark Knight,{(critic3, critic1, critic2)})<br/>(Schindler's List,{(critic1)})<br/><br/>Hence, dereferencing is used to project a field movie from a tuple(group) and a field critic from a bag(ratings)."7,11,Flatten - Tuple,"<span class=""keyword-highlighting"">FLATTEN</span> is generally used in combination with <span class=""keyword-highlighting"">FOREACH</span> operator as it eliminates nesting for each column.<br/><br/><div class=""example-header-setting"">Example 1: Flatten using position</div> Given <span class=""alias-settings"">A</span> as follows:<br/><span class=""keyword-highlighting"">DUMP</span> <span class=""alias-settings"">A</span>;<br/>(a,(b,c))<br/>(d,(e,f))<br/>(g,(h,i))<br/><span class=""alias-settings"">B</span> = <span class=""keyword-highlighting"">FOREACH</span> <span class=""alias-settings"">A</span> <span class=""keyword-highlighting"">GENERATE</span> $0, <span class=""keyword-highlighting"">FLATTEN</span>($1);<br/> <span class=""alert-settings"">Note</span>: $0 and $1 refer to the position of the the field in the tuple.<br/><br/><span class=""keyword-highlighting"">DUMP</span> <span class=""alias-settings"">B</span>;<br/>(a,b,c)<br/>(d,e,f)<br/>(g,h,i)<br/><br/>"7,12,Flatten with names,"<div class=""example-header-setting"">Example 2: Flatten using names</div>Given <span class=""alias-settings"">A</span>: {a1:chararray, a2:tuple(b1:chararray, b2:chararray)}<br/><span class=""keyword-highlighting"">DUMP</span> <span class=""alias-settings"">A</span>;<br/>(a,(b,c))<br/>(d,(e,f))<br/>(g,(h,i))<br/><span class=""alias-settings"">B</span> = <span class=""keyword-highlighting"">FOREACH</span> <span class=""alias-settings"">A</span> <span class=""keyword-highlighting"">GENERATE</span> a1, <span class=""keyword-highlighting"">FLATTEN</span>(a2);<br/><span class=""keyword-highlighting"">DUMP</span> <span class=""alias-settings"">B</span>;<br/>(a,b,c)<br/>(d,e,f)<br/>(g,h,i)<br/>"8,13,Flatten - Bag,"<span class=""keyword-highlighting"">FLATTEN</span> is generally used in combination with <span class=""keyword-highlighting"">FOREACH</span> operator as it eliminates nesting for each column.<br/><br/><div class=""example-header-setting"">Example 1: Given <span class=""alias-settings"">A</span>.</div><span class=""keyword-highlighting"">DUMP</span> <span class=""alias-settings"">A</span>;<br/>{(b,c), (d,e)})<br/>{(f,g),(h,i)}<br/>{(j,k),(l,m)}<br/><br/><span class=""alias-settings"">B</span> = <span class=""keyword-highlighting"">FOREACH</span> <span class=""alias-settings"">A</span> <span class=""keyword-highlighting"">GENERATE</span> <span class=""keyword-highlighting"">FLATTEN</span>($0);<br/><span class=""alert-settings"">Note</span>: $0 refers to the position of the the field in the tuple.<br/><br/><span class=""keyword-highlighting"">DUMP</span> <span class=""alias-settings"">B</span>;<br/>(b,c),<br/>(d,e),<br/>(f,g),<br/>(h,i),<br/>(j,k),<br/>(l,m)<br/><br/>"8,14,Flatten - Bag,"<div class=""example-header-setting"">Example 2: Given <span class=""alias-settings"">A</span>.</div><br/><span class=""keyword-highlighting"">DUMP</span> <span class=""alias-settings"">A</span>;<br/>(a, {(b,c), (d,e)})<br/>(f, {(g,h), (i,j)})<br/>(k, {(l,m), (n,o)})<br/><br/><span class=""alias-settings"">B</span> = <span class=""keyword-highlighting"">FOREACH</span> <span class=""alias-settings"">A</span> <span class=""keyword-highlighting"">GENERATE</span> $0, <span class=""keyword-highlighting"">FLATTEN</span>($1);<br/><br/><span class=""keyword-highlighting"">DUMP</span> <span class=""alias-settings"">B</span>;<br/>(a,b,c),<br/> (a,d,e),<br/>(f,g,h),<br/> (f,i,j),<br/>(k,l,m),<br/> (k,n,o)<br/>"9,15,Inner Join,"<div class=""example-header-setting"">Example 1: Inner join on 2 relations.</div><span class=""keyword-highlighting"">DUMP</span> <span class=""alias-settings"">directors</span>; #{director, movie}<br/>(Francis Lawrence, The Hunger Games- Catching Fire)<br/>(Christopher Nolan, The Dark Knight Rises)<br/>(Francis Lawrence, I am Legend)<br/>(Christopher Nolan, Inception)<br/>(Christopher Nolan, The Dark Knight)<br/>(Pierre Coffin, Despicable Me)<br/>(Sergio Leone, The Good, the Bad and the Ugly)<br/>(Sidney Lumet, Angry Men)<br/><br/><span class=""keyword-highlighting"">DUMP</span> <span class=""alias-settings"">ratings</span>; #{movie, rating}<br/>(The Hunger Games- Catching Fire, 8.0)<br/>(The Dark Knight Rises, 8.6)<br/>(I am Legend, 7.2)<br/>(Inception, 8.8)<br/>(The Dark Knight, 9.0)<br/>(Despicable Me, 7.7)<br/>(The Shawshank Redemption, 9.2)<br/>(Pulp Fiction, 8.9)<br/><br/><span class=""alias-settings"">movieInfo</span> = <span class=""keyword-highlighting"">JOIN</span> <span class=""alias-settings"">directors</span> <span class=""keyword-highlighting"">BY</span> movie, <span class=""alias-settings"">ratings</span> <span class=""keyword-highlighting"">BY</span> movie;<br/><br/><span class=""keyword-highlighting"">DUMP</span> <span class=""alias-settings"">movieInfo</span>;<br/>(Christopher Nolan,Inception,Inception, 8.8)<br/>(Francis Lawrence,I am Legend,I am Legend, 7.2)<br/>(Pierre Coffin,Despicable Me,Despicable Me, 7.7)<br/>(Christopher Nolan,The Dark Knight,The Dark Knight, 9.0)<br/>(Christopher Nolan,The Dark Knight Rises,The Dark Knight Rises, 8.6)<br/>(Francis Lawrence,The Hunger Games-Catching Fire,The Hunger Games-Catching Fire, 8.0)<br/>"10,16,Outer Join - Left,"<div class=""example-header-setting"">Example 1: Left outer join on 2 relations.</div><span class=""keyword-highlighting"">DUMP</span> <span class=""alias-settings"">directors</span>; #{director, movie} <br/>(Francis Lawrence, The Hunger Games- Catching Fire)<br/>(Christopher Nolan, The Dark Knight Rises)<br/>(Francis Lawrence, I am Legend)<br/>(Christopher Nolan, Inception)<br/>(Christopher Nolan, The Dark Knight)<br/>(Pierre Coffin, Despicable Me)<br/>(Sergio Leone, The Good, the Bad and the Ugly)<br/>(Sidney Lumet, Angry Men)<br/><br/><span class=""keyword-highlighting"">DUMP</span> <span class=""alias-settings"">ratings</span>; #(movie, rating)<br/>(The Hunger Games- Catching Fire, 8.0)<br/>(The Dark Knight Rises, 8.6)<br/>(I am Legend, 7.2)<br/>(Inception, 8.8)<br/>(The Dark Knight, 9.0)<br/>(Despicable Me, 7.7)<br/>(The Shawshank Redemption, 9.2)<br/>(Pulp Fiction, 8.9)<br/><br/><span class=""alias-settings"">movieInfo</span> = <span class=""keyword-highlighting"">JOIN</span> <span class=""alias-settings"">directors</span> <span class=""keyword-highlighting"">BY</span> movie <span class=""keyword-highlighting"">LEFT</span> <span class=""keyword-highlighting"">OUTER</span>, <span class=""alias-settings"">ratings</span> <span class=""keyword-highlighting"">BY</span> movie;<br/><br/><span class=""keyword-highlighting"">DUMP</span> <span class=""alias-settings"">movieInfo</span>;<br/>(Sergio Leone,The Good,,)<br/>(Sidney Lumet,Angry Men,,)<br/>(Christopher Nolan,Inception,Inception, 8.8)<br/>(Francis Lawrence,I am Legend,I am Legend, 7.2)<br/>(Christopher Nolan, The Dark Knight, 9.0)<br/>(Pierre Coffin,Despicable Me,Despicable Me, 7.7)<br/>(Christopher Nolan,The Dark Knight Rises,The Dark Knight Rises, 8.6)<br/>(Francis Lawrence,The Hunger Games-Catching Fire,The Hunger Games-Catching Fire, 8.0)<br/><br/><span class=""alert-settings"">Note</span>: The resulting relation consists of directors whose movies aren't listed in the ratings relation."11,17,Outer Join - Right,"<div class=""example-header-setting"">Example 1: Right outer join on 2 relations.</div><span class=""keyword-highlighting"">DUMP</span> <span class=""alias-settings"">directors</span>; #{director, movie}<br/>(Francis Lawrence, The Hunger Games- Catching Fire)<br/>(Christopher Nolan, The Dark Knight Rises)<br/>(Francis Lawrence, I am Legend)<br/>(Christopher Nolan, Inception)<br/>(Christopher Nolan, The Dark Knight)<br/>(Pierre Coffin, Despicable Me)<br/>(Sergio Leone, The Good, the Bad and the Ugly)<br/>(Sidney Lumet, Angry Men)<br/><br/><span class=""keyword-highlighting"">DUMP</span> <span class=""alias-settings"">ratings</span>; #{movie, rating}<br/>(The Hunger Games- Catching Fire, 8.0)<br/>(The Dark Knight Rises, 8.6)<br/>(I am Legend, 7.2)<br/>(Inception, 8.8)<br/>(The Dark Knight, 9.0)<br/>(Despicable Me, 7.7)<br/>(The Shawshank Redemption, 9.2)<br/>(Pulp Fiction, 8.9)<br/><br/><span class=""alias-settings"">movieInfo</span> = <span class=""keyword-highlighting"">JOIN</span> <span class=""alias-settings"">directors</span> <span class=""keyword-highlighting"">BY</span> movie <span class=""keyword-highlighting"">RIGHT</span> <span class=""keyword-highlighting"">OUTER</span>, <span class=""alias-settings"">ratings</span> <span class=""keyword-highlighting"">BY</span> movie;<br/><br/><span class=""keyword-highlighting"">DUMP</span> <span class=""alias-settings"">movieInfo</span>;<br/>(Christopher Nolan,Inception,Inception, 8.8)<br/>(Francis Lawrence,I am Legend,I am Legend, 7.2)<br/>(,,Pulp Fiction, 8.9)<br/>(Pierre Coffin,Despicable Me,Despicable Me, 7.7)<br/>(Christopher Nolan,The Dark Knight,The Dark Knight, 9.0)<br/>(Christopher Nolan,The Dark Knight Rises,The Dark Knight Rises, 8.6)<br/>(,,The Shawshank Redemption, 9.2)<br/>(Francis Lawrence,The Hunger Games-Catching Fire,The Hunger Games-Catching Fire, 8.0)<br/><br/><span class=""alert-settings"">Note</span>: The resulting relation consists of movies with directors missing from the directors relation."12,18,Outer Join - Full,"<div class=""example-header-setting"">Example 1: Full outer join on 2 relations.</div><span class=""keyword-highlighting"">DUMP</span> <span class=""alias-settings"">directors</span>; #{director, movie}<br/>(Francis Lawrence, The Hunger Games- Catching Fire)<br/>(Christopher Nolan, The Dark Knight Rises)<br/>(Francis Lawrence, I am Legend)<br/>(Christopher Nolan, Inception)<br/>(Christopher Nolan, The Dark Knight)<br/>(Pierre Coffin, Despicable Me)<br/>(Sergio Leone, The Good, the Bad and the Ugly)<br/>(Sidney Lumet, Angry Men)<br/><br/><span class=""keyword-highlighting"">DUMP</span> <span class=""alias-settings"">ratings</span>; #{movie, rating}<br/>(The Hunger Games- Catching Fire, 8.0)<br/>(The Dark Knight Rises, 8.6)<br/>(I am Legend, 7.2)<br/>(Inception, 8.8)<br/>(The Dark Knight, 9.0)<br/>(Despicable Me, 7.7)<br/>(The Shawshank Redemption, 9.2)<br/>(Pulp Fiction, 8.9)<br/><br/><span class=""alias-settings"">movieInfo</span> = <span class=""keyword-highlighting"">JOIN</span> <span class=""alias-settings"">directors</span> <span class=""keyword-highlighting"">BY</span> movie <span class=""keyword-highlighting"">FULL</span> <span class=""keyword-highlighting"">OUTER</span>, <span class=""alias-settings"">ratings</span> <span class=""keyword-highlighting"">BY</span> movie;<br/><br/><span class=""keyword-highlighting"">DUMP</span> <span class=""alias-settings"">movieInfo</span>;<br/>(Sergio Leone,The Good,,)<br/> (Sidney Lumet,Angry Men,,)<br/>(Christopher Nolan,Inception,Inception, 8.8)<br/>(Francis Lawrence,I am Legend,I am Legend, 7.2)<br/>(,,Pulp Fiction, 8.9)<br/>(Pierre Coffin,Despicable Me,Despicable Me, 7.7)<br/>(Christopher Nolan,The Dark Knight,The Dark Knight, 9.0)<br/>(Christopher Nolan,The Dark Knight Rises,The Dark Knight Rises, 8.6)<br/>(,,The Shawshank Redemption, 9.2)<br/>(Francis Lawrence,The Hunger Games-Catching Fire,The Hunger Games-Catching Fire, 8.0)<br/><br/><span class=""alert-settings"">Note</span>: The resulting relation consists of all the movies and all the directors regardless of whether they have matching tuples in the other relation."13,19,Group - Basic case,"<div class=""example-header-setting"">Example 1: Basic case</div><span class=""keyword-highlighting"">DESCRIBE</span> <span class=""alias-settings"">A</span>;<br/><span class=""alias-settings"">A</span>: {name: chararray, age: int}<br/><br/><span class=""keyword-highlighting"">DUMP</span> <span class=""alias-settings"">A</span>;<br/>(John,18)<br/>(Mary,19)<br/>(Bill,20)<br/>(Joe,18)<br/><br/><span class=""alias-settings"">B</span> = <span class=""keyword-highlighting"">GROUP</span> <span class=""alias-settings"">A</span> <span class=""keyword-highlighting"">BY</span> age;<br/><span class=""alias-settings"">B</span>: {group:int, A: {name: chararray,age: int}}<br/><span class=""alert-settings"">Note</span>: Notice the name of the fields. The first field is named group and is the same type as the group key. The second field takes the name of the original relation and is type bag.<br/><span class=""keyword-highlighting"">DUMP</span> <span class=""alias-settings"">B</span>;<br/>(18,{(John,18),(Joe,18)})<br/>(19,{(Mary,19)})<br/>(20,{(Bill,20)})<br/>"14,20,Group - With Foreach,"<div class=""example-header-setting"">Example 1: GROUP with FOREACH statements.</div>As seen in the example from the previous subtopic - Given <span class=""alias-settings"">A</span><br/><br/><span class=""keyword-highlighting"">DUMP</span> <span class=""alias-settings"">A</span>;<br/>(John,18)<br/>(Mary,19)<br/>(Bill,20)<br/>(Joe,18)<br/><br/><span class=""alias-settings"">B</span> = <span class=""keyword-highlighting"">GROUP</span> <span class=""alias-settings"">A</span> <span class=""keyword-highlighting"">BY</span> age;<br/><span class=""alias-settings"">B</span>: {group:int, A: {name: chararray,age: int}}<br/><span class=""alert-settings"">Note</span>: Notice the name of the fields. The first field is named group and is the same type as the group key. The second field takes the name of the original relation and is type bag(containing tuples from the original relation).<br/><span class=""keyword-highlighting"">DUMP</span> <span class=""alias-settings"">B</span>;<br/>(18,{(John,18),(Joe,18)})<br/>(19,{(Mary,19)})<br/>(20,{(Bill,20)})<br/><br/>If we then want to work on the resulting relation <span class=""alias-settings"">B</span>,<span class=""alias-settings"">C</span> = <span class=""keyword-highlighting"">FOREACH</span> <span class=""alias-settings"">B</span> <span class=""keyword-highlighting"">GENERATE</span> group, <span class=""keyword-highlighting"">COUNT</span>(<span class=""alias-settings"">A</span>);<br/><br/><span class=""keyword-highlighting"">DUMP</span> <span class=""alias-settings"">C</span>;<br/>(18,2)<br/>(19,1)<br/>(20,1)<br/><br/><span class=""alert-settings"">Note</span>: ""group"" can also be replaced with $0 which refers to the same field by the position of the field in the tuple."15,21,Group - With Expression,"<div class=""example-header-setting"">Example 1: <span class=""keyword-highlighting"">GROUP BY</span> expression</div><span class=""keyword-highlighting"">DESCRIBE</span> <span class=""alias-settings"">ratings</span>;<br/>{movie: chararray, rating1: long, rating2: long, rating3: long}<br/><span class=""keyword-highlighting"">DUMP</span> <span class=""alias-settings"">ratings</span>;<br/>(The Shawshank Redemption, 9.0, 9.5, 9.0)<br/>(The Godfather, 8.9, 9.2, 9.4)<br/>(The Dark Knight, 9.0, 8.7, 8.9)<br/>(Schindler's List, 8.9, 8.9, 8.9)<br/>(Fight Club, 8.7, 8.8, 8.9)<br/><br/><span class=""alias-settings"">ratingGroup</span> =  <span class=""keyword-highlighting"">GROUP</span> <span class=""alias-settings"">ratings</span> <span class=""keyword-highlighting"">BY</span> ((rating1+rating2+rating3)/3);<br/><span class=""keyword-highlighting"">DUMP</span> <span class=""alias-settings"">ratingGroup</span>;<br/>(8,{(The Godfather,8,9,9),(The Dark Knight,9,8,8),(Schindler's List,8,8,8),(Fight Club,8,8,8)})<br/>(9,{(The Shawshank Redemption,9,9,9)})<br/>"16,22,Group - With multiple fields,"<div class=""example-header-setting"">Example 1: Given a table ratings containing ratings from critics for movies:</div><span class=keyword-highlighting>DESCRIBE</span> <span class=alias-settings>ratings</span>;<br/>{criticId: chararray, movie: chararray, rating: long}<br/><br/><span class=keyword-highlighting>DUMP</span> <span class=alias-settings>ratings</span>;<br/>(critic1, The Shawshank Redemption, 9.0)<br/>(critic3, The Dark Knight, 8.8)<br/>(critic3, The Shawshank Redemption, 9.5)<br/>(critic1, Schindler's List, 9.0)<br/>(critic1, The Dark Knight, 8.8)<br/>(critic2, The Shawshank Redemption, 9.0)<br/>(critic2, The Dark Knight, 8.8)<br/><br/>If we want to get a list of critics that rated a particular movie with the exact same ratings.<br/><br/><span class=alias-settings>sameRatings</span> = <span class=keyword-highlighting>GROUP</span> <span class=alias-settings>ratings</spa <span class=keyword-highlighting>BY</span> (movie, rating);<br/><span class=keyword-highlighting>DUMP</span> <span class=alias-settings>sameRatings</span>;<br/>(( The Dark Knight,8),{(critic3, The Dark Knight,8),(critic1, The Dark Knight,8),(critic2, The Dark Knight,8)})<br/>(( Schindler's List,9),{(critic1, Schindler's List,9)})<br/>(( The Shawshank Redemption,9),{(critic1, The Shawshank Redemption,9),(critic3, The Shawshank Redemption,9),(critic2, The Shawshank Redemption,9)})<br/>"17,23,Group - Foreach block,"<div class=""example-header-setting"">Example 1: <span class=keyword-highlighting>GROUP</span> with nested <span class=keyword-highlighting>FOREACH</span> block</div>Given a dataset AllPets containing the owner name and type of pet they own as follows.<br/><span class=alias-settings>AllPets</span> = <span class=keyword-highlighting>LOAD</span> 'data' <span class=keyword-highlighting>AS</span> (owner:chararray,pet:chararray);<br/><span class=keyword-highlighting>DUMP</span> <span class=alias-settings>AllPets</span>;<br/>(Chris,snake)<br/>(Derek,dog)<br/>(Anne,rabbit)<br/>(William,cat)<br/>(William,dog)<br/>(Derek,dog)<br/><br/><span class=alias-settings>petsPerOwner</span> = <span class=keyword-highlighting>GROUP</span> <span class=alias-settings>A</span> <span class=keyword-highlighting>BY</span> owner;<br/><span class=keyword-highlighting>DUMP</span> <span class=alias-settings>petsPerOwner</span>;<br/>(Anne,{(Anne,rabbit)})<br/>(Chris,{(Chris,snake)})<br/>(Derek,{(Derek,dog),(Derek,dog)})<br/>(William,{(William,cat),(William,dog)})<br/><br/><span class=alias-settings>ownerWithDogs</span> = <span class=keyword-highlighting>FOREACH</span> <span class=alias-settings>petsPerOwner</span><br/> {<br/>        <span class=alias-settings>dogOwners</span>= <span class=keyword-highlighting>FILTER</span> <span class=alias-settings>AllPets</span> <span class=keyword-highlighting>BY</span> pet == 'dog'; --filter all the tuples with dog as a pet <br/>        <span class=alias-settings>pet</span> = <span class=alias-settings>dogOwners</span>.pet; --use projection to retrieve the field 'pet' from dogOwners relation<br/>        <span class=alias-settings>hasDog</span> = <span class=keyword-highlighting>DISTINCT</span> <span class=alias-settings>pet</span>; /*keep only the distinct pets for each tuple in the relation. (Hence each owner with more than one dog would only have 1 entry with pet as dog remaining.)*/<br/>        <span class=keyword-highlighting>GENERATE</span> group, <span class=keyword-highlighting>COUNT</span>(<span class=alias-settings>hasDog</span>); /*Generate a relation with the name of the owner and whether or not he has one or more dogs. (0 stands for false and 1 stands for true)*/<br/>}<br/><br/><span class=alert-settings>Note</span>: In this example we perform two of the operations allowed in a nested block, <span class=keyword-highlighting>FILTER</span> and <span class=keyword-highlighting>DISTINCT</span>. Note that the last statement in the nested block must be <span class=keyword-highlighting>GENERATE</span>. Also, note the use of projection (pet = <span class=alias-settings>dogOwners</span>.pet;) to retrieve a field. <span class=keyword-highlighting>DISTINCT</span> can be applied to a subset of fields (as opposed to a relation) only within a nested block.<br/><br/><span class=keyword-highlighting>DUMP</span> <span class=alias-settings>ownerWithDogs</span>;<br/>(Anne,0)<br/>(Chris,0)<br/>(Derek,1)<br/>(William,1)<br/><br/><span class=alert-settings>Note</span>: We specify comments within pigscripts by ""--"" for one line comments and /*...*/ for multi-line comments."18,24,CoGroup,"<div class=""example-header-setting"">Example 1: <span class=""keyword-highlighting"">COGROUP</span> on 2 relations</div><span class=""alias-settings"">petOwners</span> = <span class=""keyword-highlighting"">LOAD</span> 'data1' <span class=""keyword-highlighting"">AS</span> (owner:chararray,pet:chararray);<br/><span class=""keyword-highlighting"">DUMP</span> <span class=""alias-settings"">petOwners</span>;<br/>(Alice,turtle)<br/>(Alice,goldfish)<br/>(Alice,cat)<br/>(Bob,dog)<br/>(Bob,cat)<br/><br/><span class=""alias-settings"">friends</span> = <span class=""keyword-highlighting"">LOAD</span> 'data2' <span class=""keyword-highlighting"">AS</span> (friend1:chararray,friend2:chararray);<br/><span class=""keyword-highlighting"">DUMP</span> <span class=""alias-settings"">friends</span>;<br/>(Cindy,Alice)<br/>(Mark,Alice)<br/>(Paul,Bob)<br/>(Paul,Jane)<br/><br/><span class=""alert-settings"">Note</span>: In this example tuples are co-grouped using field owner from relation <span class=""alias-settings"">petOwners</span> and field friend2 from relation <span class=""alias-settings"">friends</span> as the key fields. The <span class=""keyword-highlighting"">DESCRIBE</span> operator shows the schema for relation <span class=""alias-settings"">X</span>, which has three fields, ""group"", ""A"" and ""B"".<br/><br/><span class=""alias-settings"">petOwnersAndTheirFriends</span> = <span class=""keyword-highlighting"">COGROUP</span> <span class=""alias-settings"">petOwners</span> <span class=""keyword-highlighting"">BY</span> owner, <span class=""alias-settings"">friends</span> <span class=""keyword-highlighting"">BY</span> friend2;<br/><br/><span class=""keyword-highlighting"">DESCRIBE</span> <span class=""alias-settings"">X</span>;<br/><span class=""alias-settings"">X</span>: {group: chararray,<span class=""alias-settings"">A</span>: {owner: chararray,pet: chararray},B: {friend1: chararray,friend2: chararray}}<br/><br/><span class=""alert-settings"">Note</span>: Structure of relation <span class=""alias-settings"">X</span> is as follows: A tuple is created for each unique key field. The tuple includes the key field and two bags. The first bag is the tuples from the first relation with the matching key field. The second bag is the tuples from the second relation with the matching key field. If no tuples match the key field, the bag is empty.<br/><br/><span class=""keyword-highlighting"">DUMP</span> <span class=""alias-settings"">X</span>;<br/>(Alice,{(Alice,turtle),(Alice,goldfish),(Alice,cat)},{(Cindy,Alice),(Mark,Alice)})<br/>(Bob,{(Bob,dog),(Bob,cat)},{(Paul,Bob)})<br/>(Jane,{},{(Paul,Jane)})<br/><br/><span class=""alert-settings"">Note</span>: If the key field does not have a matching tuple in either of the relations, the resulting bag is empty as in the case of Jane in the above example."19,25,DISTINCT,"<div class=""example-header-setting"">Example 1: <span class=""keyword-highlighting"">DISTINCT</span> operator</div><span class=""keyword-highlighting"">DUMP</span> <span class=""alias-settings"">A</span>;<br/>(8,3,4)<br/>(1,2,3)<br/>(4,3,3)<br/>        (4,3,3)<br/>        (1,2,3)<br/><br/><span class=""alias-settings"">X</span> = <span class=""keyword-highlighting"">DISTINCT</span> <span class=""alias-settings"">A</span>;<br/><span class=""keyword-highlighting"">DUMP</span> <span class=""alias-settings"">X</span>;<br/>(1,2,3)<br/>(4,3,3)<br/>(8,3,4)<br/>"20,26,ORDER BY,"<div class=""example-header-setting"">Example 1: <span class=""keyword-highlighting"">ORDER BY</span> operator</div><span class=""alias-settings"">A</span> = <span class=""keyword-highlighting"">LOAD</span> 'data' <span class=""keyword-highlighting"">AS</span> (a1:int,a2:int,a3:int);<br/><span class=""keyword-highlighting"">DUMP</span> <span class=""alias-settings"">A</span>;<br/>(1,2,3)<br/>(4,2,1)<br/>(8,3,4)<br/>(4,3,3)<br/>(7,2,5)<br/>(8,4,3)<br/><br/><span class=""alias-settings"">X</span> = <span class=""keyword-highlighting"">ORDER</span> <span class=""alias-settings"">A</span> <span class=""keyword-highlighting"">BY</span> a3 <span class=""keyword-highlighting"">DESC</span>; -- Order A in descending order of a3<br/><span class=""keyword-highlighting"">DUMP</span> <span class=""alias-settings"">X</span>;<br/>(7,2,5)<br/>(8,3,4)<br/>(1,2,3)<br/>(4,3,3)<br/>(8,4,3)<br/>(4,2,1)<br/><br/><span class=""alert-settings"">Note</span>: As you may have already guessed, we can use the <span class=""keyword-highlighting"">ASC</span> instead of <span class=""keyword-highlighting"">DESC</span> to sort in the ascending order."21,27,LIMIT,"<div class=""example-header-setting"">Example 1: <span class=""keyword-highlighting"">LIMIT</span> with <span class=""keyword-highlighting"">ORDER BY</span> operator</div><span class=""alias-settings"">B</span> = <span class=""keyword-highlighting"">ORDER</span> <span class=""alias-settings"">A</span> <span class=""keyword-highlighting"">BY</span> f1 <span class=""keyword-highlighting"">DESC</span>, f2 <span class=""keyword-highlighting"">ASC</span>; /* Orders <span class=""alias-settings"">A</span> in descending order of f1 and then orders the resulting relation in ascending order of f2.*/<br/><br/><span class=""keyword-highlighting"">DUMP</span> <span class=""alias-settings"">B</span>;<br/>1,2,3<br/>4,2,1<br/>8,3,4<br/>4,3,3<br/>7,2,5<br/>8,4,3<br/><br/><span class=""alias-settings"">X</span> = <span class=""keyword-highlighting"">LIMIT</span> <span class=""alias-settings"">B</span> 3;<br/><span class=""keyword-highlighting"">DUMP</span> <span class=""alias-settings"">X</span>;<br/>(8,3,4)<br/>(8,4,3)<br/>(7,2,5)<br/><br/><span class=""alert-settings"">Note</span>: 1. Notice how the order by is used with 2 different clauses, ascending order of f2 and descending order of f1.         2. You can use the <span class=""keyword-highlighting"">LIMIT</span> operator without using the <span class=""keyword-highlighting"">ORDER BY</span> operator first, this would limit the relation to holding the specified number of tuples by removing all other tuples in no specific order. Hence, there is no guarantee as to which tuples are removed from the resulting relation."22,28,Union - Basic Case,"<div class=""example-header-setting"">Example 1: <span class=""keyword-highlighting"">UNION</span> with varying schema</div><span class=""alias-settings"">A</span> = <span class=""keyword-highlighting"">LOAD</span> 'data' <span class=""keyword-highlighting"">AS</span> (a1:int,a2:int,a3:int);<br/><span class=""keyword-highlighting"">DUMP</span> <span class=""alias-settings"">A</span>;<br/>(1,2,3)<br/>(4,2,1)<br/><br/><span class=""alias-settings"">B</span> = <span class=""keyword-highlighting"">LOAD</span> 'data' <span class=""keyword-highlighting"">AS</span> (b1:int,b2:int);<br/><span class=""keyword-highlighting"">DUMP</span> <span class=""alias-settings"">A</span>;<br/>(2,4)<br/>(8,9)<br/>(1,3)<br/><br/><span class=""alias-settings"">X</span> = <span class=""keyword-highlighting"">UNION</span> <span class=""alias-settings"">A</span>, <span class=""alias-settings"">B</span>;<br/><span class=""keyword-highlighting"">DUMP</span> <span class=""alias-settings"">X</span>;<br/>(1,2,3)<br/>(4,2,1)<br/>(2,4)<br/>(8,9)<br/>(1,3)<br/><span class=""alert-settings"">Note</span>: The <span class=""keyword-highlighting"">UNION</span> operator does not preserve any specific order. To ensure that the resulting tuples are in a definite order, use the <span class=""keyword-highlighting"">ORDER BY</span> operator."23,29,Union - with ONSCHEMA clause,"<div class=""example-header-setting"">Example 1: <span class=""keyword-highlighting"">UNION</span> on varying schema with <span class=""keyword-highlighting"">ONSCHEMA</span> clause.</div><span class=""keyword-highlighting"">ONSCHEMA</span> clause is used to base the union on named fields (rather than positional notation). <br/><br/><span class=""alias-settings"">L1</span> = <span class=""keyword-highlighting"">LOAD</span> 'f1' <span class=""keyword-highlighting"">USING</span> (a : int, b : float);<br/><span class=""keyword-highlighting"">DUMP</span> <span class=""alias-settings"">L1</span>;<br/>(11,12.0)<br/>(21,22.0)<br/><br/><span class=""alias-settings"">L2</span> = <span class=""keyword-highlighting"">LOAD</span>  'f1' <span class=""keyword-highlighting"">USING</span> (a : long, c : chararray);<br/><span class=""keyword-highlighting"">DUMP</span> <span class=""alias-settings"">L2</span>;<br/>(11,a)<br/>(12,b)<br/>(13,c)<br/><br/><span class=""alias-settings"">U</span> = UNION ONSCHEMA <span class=""alias-settings"">L1</span>, <span class=""alias-settings"">L2</span>;<br/><span class=""keyword-highlighting"">DESCRIBE</span> <span class=""alias-settings"">U</span>;<br/><span class=""alias-settings"">U</span> : {a : long, b : float, c : chararray}<br/><br/><span class=""keyword-highlighting"">DUMP</span> <span class=""alias-settings"">U</span>;<br/>(11,12.0,)<br/>(21,22.0,)<br/>(11,,a)<br/>(12,,b)<br/>(13,,c)<br/><br/><span class=""alert-settings"">Note</span>: The resulting relation has a specific schema unlike the previous example. In most cases, the relations provided for <span class=""keyword-highlighting"">UNION</span> should have the same schema."24,30,SPLIT,"<div class=""example-header-setting"">Example 1: <span class=""keyword-highlighting"">SPLIT</span> relation into 3</div><span class=""alias-settings"">A</span> = <span class=""keyword-highlighting"">LOAD</span> 'data' <span class=""keyword-highlighting"">AS</span> (f1:int,f2:int,f3:int);<br/><span class=""keyword-highlighting"">DUMP</span> <span class=""alias-settings"">A</span>;<br/>(1,2,3)<br/>(4,5,6)<br/>(7,8,9)<br/><br/> <span class=""keyword-highlighting"">SPLIT</span> <span class=""alias-settings"">A</span> <span class=""keyword-highlighting"">INTO</span> <span class=""alias-settings"">X</span> <span class=""keyword-highlighting"">IF</span> f1<7, <span class=""alias-settings"">Y</span> <span class=""keyword-highlighting"">IF</span> f2==5, <span class=""alias-settings"">Z</span> <span class=""keyword-highlighting"">IF</span> (f3<6 OR f3>6);<br/><br/><span class=""keyword-highlighting"">DUMP</span> <span class=""alias-settings"">X</span>;<br/>(1,2,3)<br/>(4,5,6)<br/><br/><span class=""keyword-highlighting"">DUMP</span> <span class=""alias-settings"">Y</span>;<br/>(4,5,6)<br/><br/><span class=""keyword-highlighting"">DUMP</span> <span class=""alias-settings"">Z</span>;<br/>(1,2,3)<br/>(7,8,9)<br/>"